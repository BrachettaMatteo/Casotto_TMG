/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}
group 'it.unicam.cs.IngneriaDelSoftware'
version '1.0-SNAPSHOT'
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
ext {
    junitVersion = '5.8.2'
}
sourceCompatibility = '11'
targetCompatibility = '11'


dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    //diependenza per mysql
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.44'
   // implementation 'com.microsoft.sqlserver:mssql-jdbc:10.2.0.jre8'
}

application {
    // Define the main class for the application.
    mainClass = 'it.unicam.cs.IngegneriaDelSoftware.Casotto.Chalet'
    mainModule = 'it.unicam.cs.IngegneriaDelSoftware.Casotto'

}
javafx {
    version = '17'
    modules = ['javafx.controls', 'javafx.fxml']
}
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

